{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ryanh\\\\OneDrive\\\\Desktop\\\\React\\\\01-starting-setup\\\\src\\\\components\\\\Expenses\\\\Expenses.js\",\n  _s = $RefreshSig$();\nimport './Expenses.css';\nimport React, { useState } from \"react\";\nimport ExpenseItem from './ExpenseItem';\nimport Card from '../UI/Card';\nimport ExpensesFilter from './ExpensesFilter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Expenses = props => {\n  _s();\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\n  let filterInfoText = \"2020, 2021 & 2022\";\n  if (filteredYear === \"2019\") {\n    filterInfoText = '2020, 2021 & 2022';\n  } else if (filteredYear === \"2020\") {\n    filterInfoText = '2019, 2021 & 2022';\n  } else if (filteredYear === \"2021\") {\n    filterInfoText = '2019, 2020 & 2022';\n  } else if (filteredYear === \"2022\") {\n    filterInfoText = '2019, 2020 & 2020';\n  }\n  const savedYearDataHandler = selectedYear => {\n    setFilteredYear(selectedYear);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n        selected: filteredYear,\n        forwardedYearData: savedYearDataHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Data for years \", filterInfoText, \" is hidden.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ExpenseItem, {\n        title: props.expenses[0].title,\n        amount: props.expenses[0].amount,\n        date: props.expenses[0].date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ExpenseItem, {\n        title: props.expenses[1].title,\n        amount: props.expenses[1].amount,\n        date: props.expenses[1].date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ExpenseItem, {\n        title: props.expenses[2].title,\n        amount: props.expenses[2].amount,\n        date: props.expenses[2].date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ExpenseItem, {\n        title: props.expenses[3].title,\n        amount: props.expenses[3].amount,\n        date: props.expenses[3].date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(Expenses, \"N/aF5O1Q1Yumn7zBaSWVzvWGO2A=\");\n_c = Expenses;\nexport default Expenses;\nvar _c;\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"names":["React","useState","ExpenseItem","Card","ExpensesFilter","jsxDEV","_jsxDEV","Expenses","props","_s","filteredYear","setFilteredYear","filterInfoText","savedYearDataHandler","selectedYear","children","className","selected","forwardedYearData","fileName","_jsxFileName","lineNumber","columnNumber","title","expenses","amount","date","_c","$RefreshReg$"],"sources":["C:/Users/ryanh/OneDrive/Desktop/React/01-starting-setup/src/components/Expenses/Expenses.js"],"sourcesContent":["import './Expenses.css'\r\nimport React, { useState } from \"react\";\r\nimport ExpenseItem from './ExpenseItem';\r\nimport Card from '../UI/Card'\r\nimport ExpensesFilter from './ExpensesFilter';\r\n\r\n\r\nconst Expenses = (props) => {\r\n\r\n    const [filteredYear, setFilteredYear] = useState(\"2020\");\r\n\r\n    let filterInfoText = \"2020, 2021 & 2022\"\r\n\r\n        if(filteredYear === \"2019\") {\r\n           filterInfoText = '2020, 2021 & 2022'\r\n        } else if(filteredYear === \"2020\") {\r\n            filterInfoText = '2019, 2021 & 2022'\r\n        } else if(filteredYear === \"2021\") {\r\n            filterInfoText = '2019, 2020 & 2022'\r\n        } else if(filteredYear === \"2022\") {\r\n            filterInfoText = '2019, 2020 & 2020'\r\n        }\r\n    \r\n        const savedYearDataHandler = (selectedYear) => {\r\n            setFilteredYear(selectedYear)\r\n        }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            \r\n            <Card className='expenses'>\r\n            <ExpensesFilter selected={filteredYear} forwardedYearData={savedYearDataHandler}/>\r\n                <p>Data for years {filterInfoText} is hidden.</p>\r\n                <ExpenseItem \r\n                 title={props.expenses[0].title}\r\n                 amount={props.expenses[0].amount}\r\n                 date={props.expenses[0].date}\r\n                ></ExpenseItem>\r\n                <ExpenseItem\r\n                title={props.expenses[1].title}\r\n                amount={props.expenses[1].amount}\r\n                date={props.expenses[1].date}></ExpenseItem>\r\n                <ExpenseItem\r\n                title={props.expenses[2].title}\r\n                amount={props.expenses[2].amount}\r\n                date={props.expenses[2].date}></ExpenseItem>\r\n                <ExpenseItem\r\n                title={props.expenses[3].title}\r\n                amount={props.expenses[3].amount}\r\n                date={props.expenses[3].date}></ExpenseItem>\r\n        \r\n            </Card> \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Expenses;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}